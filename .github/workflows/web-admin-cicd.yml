name: Web User CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage
          retention-days: 7

      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: |
            npm-debug.log
            jest-debug.log
          retention-days: 7

  deploy:
    needs: test
    permissions:
      pages: write
      id-token: write
      deployments: write
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public_html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare artifact directory
        run: |
          mkdir -p artifact
          cp -r artifacts/test-coverage/* artifact/ || true
        
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az extension add --name azure-devops
      
      - name: Azure DevOps Login
        env:
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: echo $AZURE_DEVOPS_PAT | az devops login
      
      - name: Azure DevOps Artifact Upload
        env:
          AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
          AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
        run: |
          # Configure Azure DevOps CLI
          az devops configure --defaults organization="$AZURE_DEVOPS_ORG" project="$AZURE_DEVOPS_PROJECT"
          
          # List contents of artifact directory
          echo "Contents of artifact directory:"
          ls -la artifact/
          
          # Create and publish artifact
          az artifacts universal publish \
            --organization "$AZURE_DEVOPS_ORG" \
            --project "$AZURE_DEVOPS_PROJECT" \
            --scope project \
            --feed "kubadu-tests" \
            --name "webuser-tests" \
            --version "$GITHUB_RUN_NUMBER.0.0" \
            --path artifact \
            --description "Web User Tests Results from GitHub Actions Run #$GITHUB_RUN_NUMBER"
